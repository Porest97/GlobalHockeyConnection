// <auto-generated />
using System;
using GlobalHockeyConnections.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GlobalHockeyConnections.Migrations
{
    [DbContext(typeof(GlobalHockeyConnectionsContext))]
    [Migration("20190504203557_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview3.19153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GlobalHockeyConnections.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationCountry");

                    b.Property<string>("LocationCounty");

                    b.Property<string>("LocationName");

                    b.Property<string>("LocationStreetAddress");

                    b.Property<string>("LocationZipCode");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("GlobalHockeyConnections.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Ssn");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("GlobalHockeyConnections.Models.ShowCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LocationId");

                    b.Property<int?>("PersonId");

                    b.Property<int?>("ShowCaseDescriptionId");

                    b.Property<string>("SwocaseName");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("PersonId");

                    b.HasIndex("ShowCaseDescriptionId");

                    b.ToTable("ShowCase");
                });

            modelBuilder.Entity("GlobalHockeyConnections.Models.ShowCaseDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ShowCaseInfo");

                    b.HasKey("Id");

                    b.ToTable("ShowCaseDescription");
                });

            modelBuilder.Entity("GlobalHockeyConnections.Models.ShowCase", b =>
                {
                    b.HasOne("GlobalHockeyConnections.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("GlobalHockeyConnections.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("GlobalHockeyConnections.Models.ShowCaseDescription", "ShowCaseDescription")
                        .WithMany()
                        .HasForeignKey("ShowCaseDescriptionId");
                });
#pragma warning restore 612, 618
        }
    }
}
